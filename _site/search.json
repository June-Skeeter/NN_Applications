[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "A Framework for Applying Neural Networks to Eddy Covariance Data",
    "section": "",
    "text": "EC data is poorly suited for traditional statistical methods @wegman_computational_1988\n\nSite specific approaches are often needed for EC data\n\nBut from these site specific functional relationships, we hope to glean “universal” truths.\n\nWe need to ensure our results are reasonable given our understanding of system.\n\nAnd if they don’t, we need to be able to see “why”\n\nAs the period of record at sites extend (e.g, decades) the task only becomes more complex\n\nA sliver lining - computational statistics are ideally suited for voluminous data sets!\n\n\n\n\nWe provide examples to demonstrate how NN models can be used for inferential modelling\ndetecting and mapping functional relationships pattern recognition and feature detection demonstrate how they can be used to map response functions, show their ability to inferential modelling Gap-filling\ngap filling of EC data and for understanding the\nThey offer the user more control over the structure of the model and inspection of the model derivatives provides a method for validating that the relationships mapped by a model are physically plausible.\nSite specific approaches are often needed work with EC data, but from these {site specific} functional relationships, we hope to glean {universal} truths.\nWe need to ensure that the results conform to our values reasonably expected {given our understanding of system/the framework of our conceptual model}. And if they don’t, we need to be able to see “why” in order to ensure …"
  },
  {
    "objectID": "about.html#partial-derivatives",
    "href": "about.html#partial-derivatives",
    "title": "A Framework for Applying Neural Networks to Eddy Covariance Data",
    "section": "Partial Derivatives",
    "text": "Partial Derivatives\n\n\nCode\nimport pandas as pd\nimport tensorflow as tf\n\n# Use tensorfolow to calculate the first partial derivative of the function\nX_tensor = tf.convert_to_tensor(range_TA_RH.T)\nwith tf.GradientTape(persistent=True) as tape:\n    tape.watch(X_tensor)\n    VPD_est = MiscFuncs.Calc_VPD(X_tensor) \n\n# Get gradients of VPD_est with respect to X_tensor\nDeriv = tape.gradient(VPD_est,X_tensor).numpy()\nDerivatives = pd.DataFrame(\n    data={\n    'TA':range_TA_RH.T[:,0],\n    'RH':range_TA_RH.T[:,1],\n    'dVPD/dTA':Deriv[:,0],\n    'dVPD/dRH':Deriv[:,1]\n    }\n)\n\n\nfig,axes=plt.subplots(2,2,figsize=(8,8),sharey='row')\n\ndf,x,y = MiscFuncs.byInterval(Derivatives,'TA','dVPD/dTA',bins=100)\nax = PlotHelpers.CI_Plot(axes[0,0],df,y)\nax.set_title('Partial First Derivative\\nVPD with respect to Ta')\n\ndf,x,y = MiscFuncs.byInterval(Derivatives,'RH','dVPD/dRH',bins=100)\nax = PlotHelpers.CI_Plot(axes[0,1],df,y)\nax.set_title('Partial First Derivative\\nVPD with respect to RH')\n\ngrid_dVPD_dTA = Deriv[:,0].T.reshape(grid_TA.shape)\ngrid_dVPD_dRH = Deriv[:,1].T.reshape(grid_RH.shape)\n\nd_bins = np.arange(\n    np.floor(Deriv).min(),np.ceil(Deriv).max(),.5\n    )\nd_norm = [\n    Deriv.min(), Deriv.max()\n    ]\n    \nax=axes[1,0]\nPlotHelpers.Contour_Plot(fig,ax,grid_TA,grid_RH,grid_dVPD_dTA,cmap = cmap,norm=d_norm,bins=d_bins)\nax.set_title('dVPD dTa')\n\nax=axes[1,1]\nPlotHelpers.Contour_Plot(fig,ax,grid_TA,grid_RH,grid_dVPD_dRH,cmap = cmap,norm=d_norm,bins=d_bins)\nax.set_title('dVPD dRH')\n\nplt.tight_layout()\n\n\n\n\n\n\n\nThis plot shows the partial first derivatives of VPD"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NN_Applications",
    "section": "",
    "text": "Abstract\nEddy covariance (EC) is a passive, non-invasive method for measuring ecosystem-atmosphere trace gas exchange. It has become increasingly popular in recent years as hardware and software have become more accessible. Eddy covariance cannot measure fluxes continuously because the assumptions underpinning the method are not valid under all meteorologic conditions, but data from EC sites are widely used to monitor ecosystem scale energy, water, and carbon exchange. Trace gas fluxes tend to exhibit spatially and temporally variable, non-linear dependence upon numerous drivers. Multi-year EC data sets have hundreds of thousands of data points and flux time series contain both noise and data gaps. These factors make EC data poorly suited for analysis with traditional statistical methods. Here we present a guidance for leveraging the flexibility and functionality of Neural network (NN) models for working with EC data. Neural networks are a flexible machine learning method and an ideal tool for working with large multivariate datasets with complex non-linear dependencies. They offer control over the structure a model and inspection of model derivatives provides a method for ensuring that relationships mapped by a NN are physically plausible. We demonstrate methods for inferential modelling with NN and EC data, provide examples demonstrating how model derivatives can be used to detect and visualize the functional relationships, and offer comparisons to other common ML methods."
  }
]