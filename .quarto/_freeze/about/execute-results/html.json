{
  "hash": "8415583a969f8939de0af92ed1a9bf01",
  "result": {
    "markdown": "---\ntitle: A Framework for Applying Neural Networks to Eddy Covariance Data\nformat:\n  html:\n    code-fold: true\n---\n\n# Introduction \n\nEC data is poorly suited for traditional statistical methods @wegman_computational_1988\n\n* Site specific approaches are often needed for EC data\n    * **But** from these *site specific* functional relationships, we hope to glean \"universal\" truths.\n\n* We need to ensure our results are reasonable given our understanding of system.\n    * And if they don't, we need to be able to see \"why\"\n  \n* As the period of record at sites extend (e.g, decades) the task only becomes more complex\n    * A sliver lining - computational statistics are ideally suited for voluminous data sets!\n\n##\tMachine Learning\n\nWe provide examples to demonstrate how NN models can be used for inferential modelling\n\ndetecting and mapping functional relationships \npattern recognition and feature detection\ndemonstrate how they can be used to map response functions,\nshow their ability to inferential modelling Gap-filling\n\n\n gap filling of EC data and for understanding the \n\nThey offer the user more control over the structure of the model and inspection of the model derivatives provides a method for validating that the relationships mapped by a model are physically plausible.  \n\n\nSite specific approaches are often needed work with EC data, but from these {site specific} functional relationships, we hope to glean {universal} truths.\n\nWe need to ensure that the results conform to our values reasonably expected {given our understanding of system/the framework of our conceptual model}.  And if they don't, we need to be able to see \"why\" in order to ensure ...\n\n\n# Calculating and Visualizing VPD\n\nThe Vapor Pressure Deficit (VPD) decreases exponentially as a function of air temperature (Ta) and linearly as a function of relative humidity (RH).  We can calculate VPD (kPa) from Ta in ($\\circ$ C) and RH (%) as follows:\n\n$$ ea_H = 0.61365*np.exp((17.502*Ta)/(240.97+Ta))$$\n$$e_H = RH*ea_H/100$$\n$$VPD = (ea_H - e_H)*10$$\n\n::: {.cell layout-ncol='1' execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nfrom Scripts import MiscFuncs,PlotHelpers\nimport matplotlib.pyplot as plt\n\nunits = {\n    'Ta':'$T_a^\\circ$C',\n    'RH':'RH %',\n    'VPD':'VPD hPa'\n    }\n\nlabels = {\n    'Ta':'Air Temperature',\n    'RH':'Relative Humidity',\n    'VPD':'Vapor Pressure Deficit'\n    }\n\nrange_TA_RH,grid_TA,grid_RH,grid_VPD = MiscFuncs.Create_Grid(\n    np.linspace(-50,50),# Define a TA range (in C)\n    np.linspace(0,100), # Possible RH values\n    MiscFuncs.Calc_VPD # Return Vapor Pressure Defecit\n    )\n    \nbins = np.arange(5,grid_VPD.max(),15)\ncmap = 'bwr'\nnorm = [0,grid_VPD.max()]\n\nfig,ax=plt.subplots(1,figsize=(5,5))\nPlotHelpers.Contour_Plot(fig,ax,grid_TA,grid_RH,grid_VPD,cmap=cmap,norm=norm,unit = units['VPD'],bins=bins)\nax.set_xlabel('Air Temperature $^\\circ$C')\nax.set_ylabel('Relative Humidity %')\nax.set_title('Vapor Pressure Deficit (VPD)')\nplt.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![This plot shows the relationship between VPD, TA, and RH over a range of possible values](about_files/figure-html/estimating-vpd-output-1.png){#estimating-vpd width=469 height=468}\n:::\n:::\n\n\n## Partial Derivatives\n\n::: {.cell layout-ncol='1' execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\nimport tensorflow as tf\n\n# Use tensorfolow to calculate the first partial derivative of the function\nX_tensor = tf.convert_to_tensor(range_TA_RH.T)\nwith tf.GradientTape(persistent=True) as tape:\n    tape.watch(X_tensor)\n    VPD_est = MiscFuncs.Calc_VPD(X_tensor) \n\n# Get gradients of VPD_est with respect to X_tensor\nDeriv = tape.gradient(VPD_est,X_tensor).numpy()\nDerivatives = pd.DataFrame(\n    data={\n    'TA':range_TA_RH.T[:,0],\n    'RH':range_TA_RH.T[:,1],\n    'dVPD/dTA':Deriv[:,0],\n    'dVPD/dRH':Deriv[:,1]\n    }\n)\n\n\nfig,axes=plt.subplots(2,2,figsize=(8,8),sharey='row')\n\ndf,x,y = MiscFuncs.byInterval(Derivatives,'TA','dVPD/dTA',bins=100)\nax = PlotHelpers.CI_Plot(axes[0,0],df,y)\nax.set_title('Partial First Derivative\\nVPD with respect to Ta')\n\ndf,x,y = MiscFuncs.byInterval(Derivatives,'RH','dVPD/dRH',bins=100)\nax = PlotHelpers.CI_Plot(axes[0,1],df,y)\nax.set_title('Partial First Derivative\\nVPD with respect to RH')\n\ngrid_dVPD_dTA = Deriv[:,0].T.reshape(grid_TA.shape)\ngrid_dVPD_dRH = Deriv[:,1].T.reshape(grid_RH.shape)\n\nd_bins = np.arange(\n    np.floor(Deriv).min(),np.ceil(Deriv).max(),.5\n    )\nd_norm = [\n    Deriv.min(), Deriv.max()\n    ]\n    \nax=axes[1,0]\nPlotHelpers.Contour_Plot(fig,ax,grid_TA,grid_RH,grid_dVPD_dTA,cmap = cmap,norm=d_norm,bins=d_bins)\nax.set_title('dVPD dTa')\n\nax=axes[1,1]\nPlotHelpers.Contour_Plot(fig,ax,grid_TA,grid_RH,grid_dVPD_dRH,cmap = cmap,norm=d_norm,bins=d_bins)\nax.set_title('dVPD dRH')\n\nplt.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![This plot shows the partial first derivatives of VPD](about_files/figure-html/derivatives-of-vpd-output-1.png){#derivatives-of-vpd width=756 height=759}\n:::\n:::\n\n\n# Example Data\n\nBB1 Flux tower was established in 2015.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nfrom Scripts import ReadDB\n\ndbNames = {\n    'TA_1_1_1':'Ta',\n    'RH_1_1_1':'RH'\n}\n\nData = ReadDB.get_Traces('BB',['TA_1_1_1','RH_1_1_1'])\nData = Data.dropna(axis=0)\n\nData = Data.rename(columns=dbNames)\n\nData['VPD'] = MiscFuncs.Calc_VPD(Data['Ta'],Data['RH'])\n\nfig,axes=plt.subplots(1,3,figsize=(7,4))\nData.hist(column='Ta',ax=axes[0],bins=20,edgecolor='k')\naxes[0].set_xlabel(units['Ta'])\n\nData.hist(column='RH',ax=axes[1],bins=20,edgecolor='k')\naxes[1].set_xlabel(units['RH'])\n\nData.hist(column='VPD',ax=axes[2],bins=20,edgecolor='k')\naxes[2].set_xlabel(units['VPD'])\n\nplt.tight_layout()\n\nplt.show()\n\nData.describe().round(1)\n```\n\n::: {.cell-output .cell-output-display}\n![](about_files/figure-html/cell-4-output-1.png){width=662 height=374}\n:::\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Ta</th>\n      <th>RH</th>\n      <th>VPD</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>145606.0</td>\n      <td>145606.0</td>\n      <td>145606.0</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>10.4</td>\n      <td>84.3</td>\n      <td>2.8</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>6.9</td>\n      <td>15.5</td>\n      <td>3.9</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-13.8</td>\n      <td>0.0</td>\n      <td>-0.0</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>5.8</td>\n      <td>75.1</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>10.0</td>\n      <td>89.7</td>\n      <td>1.2</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>15.0</td>\n      <td>96.6</td>\n      <td>3.6</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>38.0</td>\n      <td>100.2</td>\n      <td>42.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# Artificial Gaps\n\nBB1 Flux tower was established in 2015.\n\n",
    "supporting": [
      "about_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}